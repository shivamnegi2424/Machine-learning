# -*- coding: utf-8 -*-
"""HeartDisease.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wuoeXeHCeMEo5tjBnAq4zzO60KPTIjdG
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# loading the csv data to a Pandas Dataframe
heart_data = pd.read_csv('/content/heart.csv')

#print first five rows of the dataset
heart_data.head()

#print last five rows of the dataset
heart_data.tail()

#number of rows and columns in the dataset
heart_data.shape

#info in the dataset
heart_data.info()

# checking for missing values
heart_data.isnull().sum()

#statistical measures of the data
heart_data.describe()

#checking the distribution of target variables
heart_data['target'].value_counts()

#Predicting the target with the help of features
X= heart_data.drop(columns='target',axis=1)  #axis will be 0 when dropping a row
Y= heart_data['target']

print(X)

print(Y)

#Training and testing data
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

#Model Training-Logistic Regression
model= LogisticRegression()

model.fit(X_train,Y_train)

#Model Evaluation-Finding accuracy
X_train_prediction= model.predict(X_train)
training_data_accuracy= accuracy_score(X_train_prediction,Y_train)

print('Accuracy of trained data is : ',training_data_accuracy )

X_test_prediction= model.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction,Y_test)

print('Accuracy on test data is :',test_data_accuracy)

#Finally predicting
input_data=(43,0,0,132,341,1,0,136,1,3,1,0,3)

#Converting to numpy array
input_data_as_numpy_array=np.asarray(input_data)

#Reshaping numpy array for one instance
input_data_reshaped= input_data_as_numpy_array.reshape(1,-1)

prediction=model.predict(input_data_reshaped)
print(prediction)
if(prediction[0]==0):
  print('The person is healthy & fit')
else :
  print('The person is having heart disease')

